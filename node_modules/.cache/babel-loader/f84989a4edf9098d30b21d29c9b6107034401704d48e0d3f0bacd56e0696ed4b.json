{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\hangman-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport InputLetter from './InputLetter';\nimport DisplayWord from './DisplayWord';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isLetter(char) {\n  return /^[A-Za-z]$/.test(char);\n}\nfunction isSpecialChar(char) {\n  return !isLetter(char);\n}\nfunction App() {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [gameUrl, setGameUrl] = useState(\"\");\n  const [gameOngoing, setGameOngoing] = useState(false);\n  const [gameAnswer, setGameAnswer] = useState(\"\");\n  const [charsGuessed, setCharsGuessed] = useState(new Set());\n  const [unrevealedLetters, setUnrevealedLetters] = useState(new Set());\n  const [lives, setLives] = useState(0);\n  const [msg, setMsg] = useState(\"\");\n\n  // For login to the game\n  //\n  // useEffect(() => {\n  //   const storedName = localStorage.getItem(\"loggedInUser\");\n  //   if (storedName) {\n  //     setUserName(storedName);\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   if (userName) {\n  //     localStorage.setItem(\"loggedInUser\", userName);\n  //   }\n  // }, [userName]);\n\n  useEffect(() => {\n    // Read the game state from the URL query parameter\n    const queryParams = new URLSearchParams(window.location.search);\n    const gameId = queryParams.get(\"gameId\");\n    const answer = queryParams.get(\"answer\");\n    const guessedLetters = queryParams.get(\"charsGuessed\");\n    const numLives = queryParams.get(\"lives\");\n    if (gameId && answer) {\n      setGameAnswer(answer);\n      setUnrevealedLetters(new Set(new Array(...answer).filter(char => isLetter(char))));\n      setCharsGuessed(new Set(guessedLetters ? guessedLetters.split(\"\") : []));\n      setLives(numLives ? parseInt(numLives) : 0);\n      setGameOngoing(true);\n    }\n  }, []);\n  function newGame(newAnswer) {\n    const answer = newAnswer.toUpperCase();\n    setGameAnswer(answer);\n    setUnrevealedLetters(new Set(new Array(...answer).filter(char => isLetter(char))));\n    setCharsGuessed(new Set());\n    setLives(5);\n    setMsg(\"\");\n    setGameOngoing(true);\n\n    // Generate a unique game ID\n    const gameId = Math.random().toString(36).substr(2, 9);\n    // Update the URL query parameter with the game ID and game state\n    const queryParams = new URLSearchParams(window.location.search);\n    queryParams.set(\"gameId\", gameId);\n    queryParams.set(\"answer\", answer);\n    queryParams.set(\"charsGuessed\", \"\");\n    queryParams.set(\"lives\", \"5\");\n    window.history.replaceState({}, \"\", \"?\" + queryParams.toString());\n    // Update the game URL state variable with the generated URL\n    setGameUrl(window.location.href);\n  }\n  function onGuessSubmitted(guessedChar) {\n    if (unrevealedLetters.has(guessedChar)) {\n      let newSet = new Set(unrevealedLetters);\n      newSet.delete(guessedChar);\n      setUnrevealedLetters(newSet);\n      if (newSet.size <= 0) {\n        setMsg(\"You won!\");\n        setGameOngoing(false);\n      }\n    } else {\n      const p = lives - 1;\n      setLives(p);\n      if (p <= 0) {\n        setMsg(\"You lost.\");\n        setGameOngoing(false);\n      }\n    }\n    let newCharsGuessed = new Set(charsGuessed);\n    newCharsGuessed.add(guessedChar);\n    setCharsGuessed(newCharsGuessed);\n  }\n  function newGameButtonClicked() {\n    const newAnswer = \"popcorn\"; //this is where you set the word for the game\n    newGame(newAnswer);\n    const gameId = Math.random().toString(36).substr(2, 9); // generate a random game ID\n    setGameUrl(`${window.location.href}?game=${gameId}`); // update the gameUrl with the new game ID\n  }\n\n  function shareGame() {\n    const queryParams = new URLSearchParams({\n      word: gameAnswer,\n      guessedLetters: Array.from(charsGuessed).join(\"\"),\n      lives: lives\n    });\n    const url = `${window.location.href.split(\"?\")[0]}?${queryParams.toString()}`;\n    navigator.clipboard.writeText(url);\n    alert(\"Game URL copied to clipboard!\");\n  }\n\n  // For Logout\n  const SignOut = () => {\n    // Remove the game ID from the URL query parameter\n    const urlParams = new URLSearchParams(window.location.search);\n    urlParams.delete(\"gameId\");\n    const newUrl = window.location.pathname + \"?\" + urlParams.toString();\n    window.history.replaceState(null, \"\", newUrl);\n    localStorage.removeItem(\"loggedInUser\");\n    window.location.href = \"/\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DisplayWord, {\n      answer: gameAnswer,\n      unrevealedLetters: unrevealedLetters,\n      isSpecialChar: isSpecialChar,\n      isGameFinished: !gameOngoing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout\",\n        title: \"logout\",\n        onClick: () => SignOut(),\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: shareGame,\n        children: \"Share Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Guessed Letters:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guessed-letters\",\n        children: new Array(charsGuessed).map(letter => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guessed-letter\",\n            children: letter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Lives: \", lives]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), gameOngoing ? /*#__PURE__*/_jsxDEV(InputLetter, {\n        isValidLetter: isLetter,\n        guessedLetters: charsGuessed,\n        onGuessSubmitted: onGuessSubmitted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 10\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: newGameButtonClicked,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"msg\",\n      children: msg && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/5glBXYJim+PdZk5xtvsoHPkUa8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","InputLetter","DisplayWord","jsxDEV","_jsxDEV","isLetter","char","test","isSpecialChar","App","_s","userName","setUserName","gameUrl","setGameUrl","gameOngoing","setGameOngoing","gameAnswer","setGameAnswer","charsGuessed","setCharsGuessed","Set","unrevealedLetters","setUnrevealedLetters","lives","setLives","msg","setMsg","queryParams","URLSearchParams","window","location","search","gameId","get","answer","guessedLetters","numLives","Array","filter","split","parseInt","newGame","newAnswer","toUpperCase","Math","random","toString","substr","set","history","replaceState","href","onGuessSubmitted","guessedChar","has","newSet","delete","size","p","newCharsGuessed","add","newGameButtonClicked","shareGame","word","from","join","url","navigator","clipboard","writeText","alert","SignOut","urlParams","newUrl","pathname","localStorage","removeItem","className","children","isGameFinished","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","map","letter","isValidLetter","_c","$RefreshReg$"],"sources":["C:/Users/HP/hangman-frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport InputLetter from './InputLetter';\nimport DisplayWord from './DisplayWord';\n\nfunction isLetter(char) {\n  return /^[A-Za-z]$/.test(char);\n}\n\nfunction isSpecialChar(char) {\n  return !isLetter(char);\n}\n\n\nfunction App() {\n\n  const [userName, setUserName] = useState(\"\");\n  const [gameUrl, setGameUrl] = useState(\"\"); \n  const [gameOngoing, setGameOngoing] = useState(false)\n  const [gameAnswer, setGameAnswer] = useState(\"\");\n  const [charsGuessed, setCharsGuessed] = useState(new Set());\n  const [unrevealedLetters, setUnrevealedLetters] = useState(new Set());\n  const [lives, setLives] = useState(0);\n  const [msg, setMsg] = useState(\"\");\n\n  // For login to the game\n  //\n  // useEffect(() => {\n  //   const storedName = localStorage.getItem(\"loggedInUser\");\n  //   if (storedName) {\n  //     setUserName(storedName);\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   if (userName) {\n  //     localStorage.setItem(\"loggedInUser\", userName);\n  //   }\n  // }, [userName]);\n\n  useEffect(() => {\n    // Read the game state from the URL query parameter\n    const queryParams = new URLSearchParams(window.location.search);\n    const gameId = queryParams.get(\"gameId\");\n    const answer = queryParams.get(\"answer\");\n    const guessedLetters = queryParams.get(\"charsGuessed\");\n    const numLives = queryParams.get(\"lives\");\n    if (gameId && answer) {\n      setGameAnswer(answer);\n      setUnrevealedLetters(new Set(new Array(...answer).filter(char => isLetter(char))));\n      setCharsGuessed(new Set(guessedLetters ? guessedLetters.split(\"\") : []));\n      setLives(numLives ? parseInt(numLives) : 0);\n      setGameOngoing(true);\n    }\n  }, []);\n\n    function newGame(newAnswer) {\n      const answer = newAnswer.toUpperCase();\n      setGameAnswer(answer);\n      setUnrevealedLetters(new Set(new Array(...answer).filter(char => isLetter(char))));\n      setCharsGuessed(new Set());\n      setLives(5);\n      setMsg(\"\");\n      setGameOngoing(true);\n\n      // Generate a unique game ID\n      const gameId = Math.random().toString(36).substr(2, 9);\n      // Update the URL query parameter with the game ID and game state\n      const queryParams = new URLSearchParams(window.location.search);\n      queryParams.set(\"gameId\", gameId);\n      queryParams.set(\"answer\", answer);\n      queryParams.set(\"charsGuessed\", \"\");\n      queryParams.set(\"lives\", \"5\");\n      window.history.replaceState({}, \"\", \"?\" + queryParams.toString());\n      // Update the game URL state variable with the generated URL\n      setGameUrl(window.location.href);\n    }\n\n  function onGuessSubmitted(guessedChar) {\n    if(unrevealedLetters.has(guessedChar)) {\n      let newSet = new Set(unrevealedLetters);\n      newSet.delete(guessedChar);\n      setUnrevealedLetters(newSet);\n \n      if(newSet.size <= 0) {\n        setMsg(\"You won!\");\n        setGameOngoing(false); \n      }\n    }\n    else {\n      const p = lives - 1;\n      setLives(p);\n      if(p <= 0) {\n        setMsg(\"You lost.\");\n        setGameOngoing(false);\n      }\n    }\n\n    let newCharsGuessed = new Set(charsGuessed);\n    newCharsGuessed.add(guessedChar);\n    setCharsGuessed(newCharsGuessed);\n  }\n\n  function newGameButtonClicked() {\n    const newAnswer = \"popcorn\"; //this is where you set the word for the game\n    newGame(newAnswer);\n    const gameId = Math.random().toString(36).substr(2, 9); // generate a random game ID\n    setGameUrl(`${window.location.href}?game=${gameId}`); // update the gameUrl with the new game ID\n  }\n\n  function shareGame() {\n    const queryParams = new URLSearchParams({\n      word: gameAnswer,\n      guessedLetters: Array.from(charsGuessed).join(\"\"),\n      lives: lives\n    });\n    const url = `${window.location.href.split(\"?\")[0]}?${queryParams.toString()}`;\n    navigator.clipboard.writeText(url);\n    alert(\"Game URL copied to clipboard!\");\n  }\n\n  // For Logout\n  const SignOut = () => {\n    // Remove the game ID from the URL query parameter\n    const urlParams = new URLSearchParams(window.location.search);\n    urlParams.delete(\"gameId\");\n    const newUrl = window.location.pathname + \"?\" + urlParams.toString();\n    window.history.replaceState(null, \"\", newUrl);\n\n    localStorage.removeItem(\"loggedInUser\");\n    window.location.href = \"/\";\n  };\n\n  return (\n    <div className=\"App\">\n      <DisplayWord answer={gameAnswer} unrevealedLetters={unrevealedLetters} isSpecialChar={isSpecialChar} isGameFinished={!gameOngoing}/>\n      <div>\n        <button className=\"logout\" title=\"logout\" onClick={() => SignOut()}>Logout</button>\n        <button onClick={shareGame}>Share Game</button> \n      </div>\n      <div>\n        <h2>Guessed Letters:</h2>\n        <div className=\"guessed-letters\">\n          {new Array(charsGuessed).map((letter) => {\n            return(<div className=\"guessed-letter\">{letter}</div>);\n          })}\n        </div>\n        <div>\n          Lives: {lives}\n        </div>\n        {gameOngoing ? \n        (<InputLetter isValidLetter={isLetter} guessedLetters={charsGuessed} onGuessSubmitted={onGuessSubmitted}/>)\n        :\n        (<button onClick={newGameButtonClicked}>New Game</button>)}\n      </div>\n      <div className=\"msg\">\n                {msg && ( <div>{msg}</div>)}\n            </div>\n    </div>\n      \n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\hangman-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport InputLetter from './InputLetter';\nimport DisplayWord from './DisplayWord';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isLetter(char) {\n  return /^[A-Za-z]$/.test(char);\n}\nfunction isSpecialChar(char) {\n  return !isLetter(char);\n}\nfunction App() {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [gameUrl, setGameUrl] = useState(\"\");\n  const [gameOngoing, setGameOngoing] = useState(false);\n  const [gameAnswer, setGameAnswer] = useState(\"\");\n  const [charsGuessed, setCharsGuessed] = useState(new Set());\n  const [unrevealedLetters, setUnrevealedLetters] = useState(new Set());\n  const [lives, setLives] = useState(0);\n  const [msg, setMsg] = useState(\"\");\n\n  // For login to the game\n  //\n  // // useEffect(() => {\n  // //   const storedName = localStorage.getItem(\"loggedInUser\");\n  // //   if (storedName) {\n  // //     setUserName(storedName);\n  // //   }\n  // // }, []);\n\n  // // useEffect(() => {\n  // //   if (userName) {\n  // //     localStorage.setItem(\"loggedInUser\", userName);\n  // //   }\n  // // }, [userName]);\n\n  useEffect(() => {\n    // Read the game state from the URL query parameter\n    const queryParams = new URLSearchParams(window.location.search);\n    const gameId = queryParams.get(\"gameId\");\n    const answer = queryParams.get(\"answer\");\n    const guessedLetters = queryParams.get(\"charsGuessed\");\n    const numLives = queryParams.get(\"lives\");\n    if (gameId && answer) {\n      setGameAnswer(answer);\n      setUnrevealedLetters(new Set(new Array(...answer).filter(char => isLetter(char))));\n      setCharsGuessed(new Set(guessedLetters ? guessedLetters.split(\"\") : []));\n      setLives(numLives ? parseInt(numLives) : 0);\n      setGameOngoing(true);\n    }\n  }, []);\n  function newGame(newAnswer) {\n    const answer = newAnswer.toUpperCase();\n    setGameAnswer(answer);\n    setUnrevealedLetters(new Set(new Array(...answer).filter(char => isLetter(char))));\n    setCharsGuessed(new Set());\n    setLives(5);\n    setMsg(\"\");\n    setGameOngoing(true);\n\n    // // Generate a unique game ID\n    // const gameId = Math.random().toString(36).substr(2, 9);\n    // // Update the URL query parameter with the game ID and game state\n    // const queryParams = new URLSearchParams(window.location.search);\n    // queryParams.set(\"gameId\", gameId);\n    // queryParams.set(\"answer\", answer);\n    // queryParams.set(\"charsGuessed\", \"\");\n    // queryParams.set(\"lives\", \"5\");\n    // window.history.replaceState({}, \"\", \"?\" + queryParams.toString());\n    // // Update the game URL state variable with the generated URL\n    // setGameUrl(window.location.href);\n  }\n\n  function onGuessSubmitted(guessedChar) {\n    if (unrevealedLetters.has(guessedChar)) {\n      let newSet = new Set(unrevealedLetters);\n      newSet.delete(guessedChar);\n      setUnrevealedLetters(newSet);\n      if (newSet.size <= 0) {\n        setMsg(\"You won!\");\n        setGameOngoing(false);\n      }\n    } else {\n      const p = lives - 1;\n      setLives(p);\n      if (p <= 0) {\n        setMsg(\"You lost.\");\n        setGameOngoing(false);\n      }\n    }\n    let newCharsGuessed = new Set(charsGuessed);\n    newCharsGuessed.add(guessedChar);\n    setCharsGuessed(newCharsGuessed);\n  }\n  function newGameButtonClicked() {\n    const newAnswer = \"popcorn\"; //this is where you set the word for the game\n    newGame(newAnswer);\n    //   const gameId = Math.random().toString(36).substr(2, 9); // generate a random game ID\n    //   setGameUrl(`${window.location.href}?game=${gameId}`); // update the gameUrl with the new game ID\n  }\n\n  // function shareGame() {\n  //   const queryParams = new URLSearchParams({\n  //     word: gameAnswer,\n  //     guessedLetters: Array.from(charsGuessed).join(\"\"),\n  //     lives: lives\n  //   });\n  //   const url = `${window.location.href.split(\"?\")[0]}?${queryParams.toString()}`;\n  //   navigator.clipboard.writeText(url);\n  //   alert(\"Game URL copied to clipboard!\");\n  // }\n\n  // For Logout\n  const SignOut = () => {\n    // Remove the game ID from the URL query parameter\n    // const urlParams = new URLSearchParams(window.location.search);\n    // urlParams.delete(\"gameId\");\n    // const newUrl = window.location.pathname + \"?\" + urlParams.toString();\n    // window.history.replaceState(null, \"\", newUrl);\n\n    localStorage.removeItem(\"loggedInUser\");\n    window.location.href = \"/\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DisplayWord, {\n      answer: gameAnswer,\n      unrevealedLetters: unrevealedLetters,\n      isSpecialChar: isSpecialChar,\n      isGameFinished: !gameOngoing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout\",\n        title: \"logout\",\n        onClick: () => SignOut(),\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Guessed Letters:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guessed-letters\",\n        children: new Array(charsGuessed).map(letter => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guessed-letter\",\n            children: letter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Lives: \", lives]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), gameOngoing ? /*#__PURE__*/_jsxDEV(InputLetter, {\n        isValidLetter: isLetter,\n        guessedLetters: charsGuessed,\n        onGuessSubmitted: onGuessSubmitted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 10\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: newGameButtonClicked,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"msg\",\n      children: msg && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/5glBXYJim+PdZk5xtvsoHPkUa8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","InputLetter","DisplayWord","jsxDEV","_jsxDEV","isLetter","char","test","isSpecialChar","App","_s","userName","setUserName","gameUrl","setGameUrl","gameOngoing","setGameOngoing","gameAnswer","setGameAnswer","charsGuessed","setCharsGuessed","Set","unrevealedLetters","setUnrevealedLetters","lives","setLives","msg","setMsg","queryParams","URLSearchParams","window","location","search","gameId","get","answer","guessedLetters","numLives","Array","filter","split","parseInt","newGame","newAnswer","toUpperCase","onGuessSubmitted","guessedChar","has","newSet","delete","size","p","newCharsGuessed","add","newGameButtonClicked","SignOut","localStorage","removeItem","href","className","children","isGameFinished","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","map","letter","isValidLetter","_c","$RefreshReg$"],"sources":["C:/Users/HP/hangman-frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport InputLetter from './InputLetter';\nimport DisplayWord from './DisplayWord';\n\nfunction isLetter(char) {\n  return /^[A-Za-z]$/.test(char);\n}\n\nfunction isSpecialChar(char) {\n  return !isLetter(char);\n}\n\n\nfunction App() {\n\n  const [userName, setUserName] = useState(\"\");\n  const [gameUrl, setGameUrl] = useState(\"\"); \n  const [gameOngoing, setGameOngoing] = useState(false)\n  const [gameAnswer, setGameAnswer] = useState(\"\");\n  const [charsGuessed, setCharsGuessed] = useState(new Set());\n  const [unrevealedLetters, setUnrevealedLetters] = useState(new Set());\n  const [lives, setLives] = useState(0);\n  const [msg, setMsg] = useState(\"\");\n\n  // For login to the game\n  //\n  // // useEffect(() => {\n  // //   const storedName = localStorage.getItem(\"loggedInUser\");\n  // //   if (storedName) {\n  // //     setUserName(storedName);\n  // //   }\n  // // }, []);\n\n  // // useEffect(() => {\n  // //   if (userName) {\n  // //     localStorage.setItem(\"loggedInUser\", userName);\n  // //   }\n  // // }, [userName]);\n\n  useEffect(() => {\n    // Read the game state from the URL query parameter\n    const queryParams = new URLSearchParams(window.location.search);\n    const gameId = queryParams.get(\"gameId\");\n    const answer = queryParams.get(\"answer\");\n    const guessedLetters = queryParams.get(\"charsGuessed\");\n    const numLives = queryParams.get(\"lives\");\n    if (gameId && answer) {\n      setGameAnswer(answer);\n      setUnrevealedLetters(new Set(new Array(...answer).filter(char => isLetter(char))));\n      setCharsGuessed(new Set(guessedLetters ? guessedLetters.split(\"\") : []));\n      setLives(numLives ? parseInt(numLives) : 0);\n      setGameOngoing(true);\n    }\n  }, []);\n\n    function newGame(newAnswer) {\n      const answer = newAnswer.toUpperCase();\n      setGameAnswer(answer);\n      setUnrevealedLetters(new Set(new Array(...answer).filter(char => isLetter(char))));\n      setCharsGuessed(new Set());\n      setLives(5);\n      setMsg(\"\");\n      setGameOngoing(true);\n\n      // // Generate a unique game ID\n      // const gameId = Math.random().toString(36).substr(2, 9);\n      // // Update the URL query parameter with the game ID and game state\n      // const queryParams = new URLSearchParams(window.location.search);\n      // queryParams.set(\"gameId\", gameId);\n      // queryParams.set(\"answer\", answer);\n      // queryParams.set(\"charsGuessed\", \"\");\n      // queryParams.set(\"lives\", \"5\");\n      // window.history.replaceState({}, \"\", \"?\" + queryParams.toString());\n      // // Update the game URL state variable with the generated URL\n      // setGameUrl(window.location.href);\n    }\n\n  function onGuessSubmitted(guessedChar) {\n    if(unrevealedLetters.has(guessedChar)) {\n      let newSet = new Set(unrevealedLetters);\n      newSet.delete(guessedChar);\n      setUnrevealedLetters(newSet);\n \n      if(newSet.size <= 0) {\n        setMsg(\"You won!\");\n        setGameOngoing(false); \n      }\n    }\n    else {\n      const p = lives - 1;\n      setLives(p);\n      if(p <= 0) {\n        setMsg(\"You lost.\");\n        setGameOngoing(false);\n      }\n    }\n\n    let newCharsGuessed = new Set(charsGuessed);\n    newCharsGuessed.add(guessedChar);\n    setCharsGuessed(newCharsGuessed);\n  }\n\n  function newGameButtonClicked() {\n    const newAnswer = \"popcorn\"; //this is where you set the word for the game\n    newGame(newAnswer);\n  //   const gameId = Math.random().toString(36).substr(2, 9); // generate a random game ID\n  //   setGameUrl(`${window.location.href}?game=${gameId}`); // update the gameUrl with the new game ID\n  }\n\n  // function shareGame() {\n  //   const queryParams = new URLSearchParams({\n  //     word: gameAnswer,\n  //     guessedLetters: Array.from(charsGuessed).join(\"\"),\n  //     lives: lives\n  //   });\n  //   const url = `${window.location.href.split(\"?\")[0]}?${queryParams.toString()}`;\n  //   navigator.clipboard.writeText(url);\n  //   alert(\"Game URL copied to clipboard!\");\n  // }\n\n  // For Logout\n  const SignOut = () => {\n    // Remove the game ID from the URL query parameter\n    // const urlParams = new URLSearchParams(window.location.search);\n    // urlParams.delete(\"gameId\");\n    // const newUrl = window.location.pathname + \"?\" + urlParams.toString();\n    // window.history.replaceState(null, \"\", newUrl);\n\n    localStorage.removeItem(\"loggedInUser\");\n    window.location.href = \"/\";\n  };\n\n  return (\n    <div className=\"App\">\n      <DisplayWord answer={gameAnswer} unrevealedLetters={unrevealedLetters} isSpecialChar={isSpecialChar} isGameFinished={!gameOngoing}/>\n      <div>\n        <button className=\"logout\" title=\"logout\" onClick={() => SignOut()}>Logout</button>\n        {/* <button onClick={shareGame}>Share Game</button> */}\n      </div>\n      <div>\n        <h2>Guessed Letters:</h2>\n        <div className=\"guessed-letters\">\n          {new Array(charsGuessed).map((letter) => {\n            return(<div className=\"guessed-letter\">{letter}</div>);\n          })}\n        </div>\n        <div>\n          Lives: {lives}\n        </div>\n        {gameOngoing ? \n        (<InputLetter isValidLetter={isLetter} guessedLetters={charsGuessed} onGuessSubmitted={onGuessSubmitted}/>)\n        :\n        (<button onClick={newGameButtonClicked}>New Game</button>)}\n      </div>\n      <div className=\"msg\">\n                {msg && ( <div>{msg}</div>)}\n            </div>\n    </div>\n      \n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAACC,IAAI,EAAE;EACtB,OAAO,YAAY,CAACC,IAAI,CAACD,IAAI,CAAC;AAChC;AAEA,SAASE,aAAaA,CAACF,IAAI,EAAE;EAC3B,OAAO,CAACD,QAAQ,CAACC,IAAI,CAAC;AACxB;AAGA,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACkB,UAAU,EAAEC,aAAa,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoB,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,IAAIsB,GAAG,EAAE,CAAC;EAC3D,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGxB,QAAQ,CAAC,IAAIsB,GAAG,EAAE,CAAC;EACrE,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAAC2B,GAAG,EAAEC,MAAM,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;;EAElC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEAC,SAAS,CAAC,MAAM;IACd;IACA,MAAM4B,WAAW,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;IAC/D,MAAMC,MAAM,GAAGL,WAAW,CAACM,GAAG,CAAC,QAAQ,CAAC;IACxC,MAAMC,MAAM,GAAGP,WAAW,CAACM,GAAG,CAAC,QAAQ,CAAC;IACxC,MAAME,cAAc,GAAGR,WAAW,CAACM,GAAG,CAAC,cAAc,CAAC;IACtD,MAAMG,QAAQ,GAAGT,WAAW,CAACM,GAAG,CAAC,OAAO,CAAC;IACzC,IAAID,MAAM,IAAIE,MAAM,EAAE;MACpBjB,aAAa,CAACiB,MAAM,CAAC;MACrBZ,oBAAoB,CAAC,IAAIF,GAAG,CAAC,IAAIiB,KAAK,CAAC,GAAGH,MAAM,CAAC,CAACI,MAAM,CAACjC,IAAI,IAAID,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;MAClFc,eAAe,CAAC,IAAIC,GAAG,CAACe,cAAc,GAAGA,cAAc,CAACI,KAAK,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;MACxEf,QAAQ,CAACY,QAAQ,GAAGI,QAAQ,CAACJ,QAAQ,CAAC,GAAG,CAAC,CAAC;MAC3CrB,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC,EAAE,EAAE,CAAC;EAEJ,SAAS0B,OAAOA,CAACC,SAAS,EAAE;IAC1B,MAAMR,MAAM,GAAGQ,SAAS,CAACC,WAAW,EAAE;IACtC1B,aAAa,CAACiB,MAAM,CAAC;IACrBZ,oBAAoB,CAAC,IAAIF,GAAG,CAAC,IAAIiB,KAAK,CAAC,GAAGH,MAAM,CAAC,CAACI,MAAM,CAACjC,IAAI,IAAID,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClFc,eAAe,CAAC,IAAIC,GAAG,EAAE,CAAC;IAC1BI,QAAQ,CAAC,CAAC,CAAC;IACXE,MAAM,CAAC,EAAE,CAAC;IACVX,cAAc,CAAC,IAAI,CAAC;;IAEpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF;;EAEF,SAAS6B,gBAAgBA,CAACC,WAAW,EAAE;IACrC,IAAGxB,iBAAiB,CAACyB,GAAG,CAACD,WAAW,CAAC,EAAE;MACrC,IAAIE,MAAM,GAAG,IAAI3B,GAAG,CAACC,iBAAiB,CAAC;MACvC0B,MAAM,CAACC,MAAM,CAACH,WAAW,CAAC;MAC1BvB,oBAAoB,CAACyB,MAAM,CAAC;MAE5B,IAAGA,MAAM,CAACE,IAAI,IAAI,CAAC,EAAE;QACnBvB,MAAM,CAAC,UAAU,CAAC;QAClBX,cAAc,CAAC,KAAK,CAAC;MACvB;IACF,CAAC,MACI;MACH,MAAMmC,CAAC,GAAG3B,KAAK,GAAG,CAAC;MACnBC,QAAQ,CAAC0B,CAAC,CAAC;MACX,IAAGA,CAAC,IAAI,CAAC,EAAE;QACTxB,MAAM,CAAC,WAAW,CAAC;QACnBX,cAAc,CAAC,KAAK,CAAC;MACvB;IACF;IAEA,IAAIoC,eAAe,GAAG,IAAI/B,GAAG,CAACF,YAAY,CAAC;IAC3CiC,eAAe,CAACC,GAAG,CAACP,WAAW,CAAC;IAChC1B,eAAe,CAACgC,eAAe,CAAC;EAClC;EAEA,SAASE,oBAAoBA,CAAA,EAAG;IAC9B,MAAMX,SAAS,GAAG,SAAS,CAAC,CAAC;IAC7BD,OAAO,CAACC,SAAS,CAAC;IACpB;IACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAMY,OAAO,GAAGA,CAAA,KAAM;IACpB;IACA;IACA;IACA;IACA;;IAEAC,YAAY,CAACC,UAAU,CAAC,cAAc,CAAC;IACvC3B,MAAM,CAACC,QAAQ,CAAC2B,IAAI,GAAG,GAAG;EAC5B,CAAC;EAED,oBACEtD,OAAA;IAAKuD,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBxD,OAAA,CAACF,WAAW;MAACiC,MAAM,EAAElB,UAAW;MAACK,iBAAiB,EAAEA,iBAAkB;MAACd,aAAa,EAAEA,aAAc;MAACqD,cAAc,EAAE,CAAC9C;IAAY;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACpI7D,OAAA;MAAAwD,QAAA,eACExD,OAAA;QAAQuD,SAAS,EAAC,QAAQ;QAACO,KAAK,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMZ,OAAO,EAAG;QAAAK,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAE/E,eACN7D,OAAA;MAAAwD,QAAA,gBACExD,OAAA;QAAAwD,QAAA,EAAI;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACzB7D,OAAA;QAAKuD,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC7B,IAAItB,KAAK,CAACnB,YAAY,CAAC,CAACiD,GAAG,CAAEC,MAAM,IAAK;UACvC,oBAAOjE,OAAA;YAAKuD,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAAES;UAAM;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO;QACvD,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,eACN7D,OAAA;QAAAwD,QAAA,GAAK,SACI,EAACpC,KAAK;MAAA;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACT,EACLlD,WAAW,gBACXX,OAAA,CAACH,WAAW;QAACqE,aAAa,EAAEjE,QAAS;QAAC+B,cAAc,EAAEjB,YAAa;QAAC0B,gBAAgB,EAAEA;MAAiB;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,gBAEzG7D,OAAA;QAAQ+D,OAAO,EAAEb,oBAAqB;QAAAM,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtD,eACN7D,OAAA;MAAKuD,SAAS,EAAC,KAAK;MAAAC,QAAA,EACTlC,GAAG,iBAAMtB,OAAA;QAAAwD,QAAA,EAAMlC;MAAG;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAQ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACR;AAGV;AAACvD,EAAA,CAnJQD,GAAG;AAAA8D,EAAA,GAAH9D,GAAG;AAqJZ,eAAeA,GAAG;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
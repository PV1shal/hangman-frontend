{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\hangman-frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport InputLetter from './InputLetter';\nimport DisplayWord from './DisplayWord';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction isLetter(char) {\n  return /^[A-Za-z]$/.test(char);\n}\nfunction isSpecialChar(char) {\n  return !isLetter(char);\n}\nfunction App() {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [gameOngoing, setGameOngoing] = useState(false);\n  const [gameAnswer, setGameAnswer] = useState(\"\");\n  const [charsGuessed, setCharsGuessed] = useState(new Set());\n  const [unrevealedLetters, setUnrevealedLetters] = useState(new Set());\n  const [lives, setLives] = useState(0);\n  const [msg, setMsg] = useState(\"\");\n\n  // For login to the game\n  //\n  // useEffect(() => {\n  //   const storedName = localStorage.getItem(\"loggedInUser\");\n  //   if (storedName) {\n  //     setUserName(storedName);\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   if (userName) {\n  //     localStorage.setItem(\"loggedInUser\", userName);\n  //   }\n  // }, [userName]);\n\n  function newGame(newAnswer) {\n    const answer = newAnswer.toUpperCase();\n    setGameAnswer(answer);\n    setUnrevealedLetters(new Set(new Array(...answer).filter(char => isLetter(char))));\n    setCharsGuessed(new Set());\n    setLives(5);\n    setMsg(\"\");\n    setGameOngoing(true);\n  }\n  function onGuessSubmitted(guessedChar) {\n    if (unrevealedLetters.has(guessedChar)) {\n      let newSet = new Set(unrevealedLetters);\n      newSet.delete(guessedChar);\n      setUnrevealedLetters(newSet);\n      if (newSet.size <= 0) {\n        setMsg(\"You won!\");\n        setGameOngoing(false);\n      }\n    } else {\n      const p = lives - 1;\n      setLives(p);\n      if (p <= 0) {\n        setMsg(\"You lost.\");\n        setGameOngoing(false);\n      }\n    }\n    let newCharsGuessed = new Set(charsGuessed);\n    newCharsGuessed.add(guessedChar);\n    setCharsGuessed(newCharsGuessed);\n  }\n  function newGameButtonClicked() {\n    const newAnswer = \"popcorn\"; //this is where you set the word for the game\n    newGame(newAnswer);\n  }\n\n  // For Logout\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(DisplayWord, {\n      answer: gameAnswer,\n      unrevealedLetters: unrevealedLetters,\n      isSpecialChar: isSpecialChar,\n      isGameFinished: !gameOngoing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Guessed Letters:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"guessed-letters\",\n        children: new Array(charsGuessed).map(letter => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"guessed-letter\",\n            children: letter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Lives: \", lives]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), gameOngoing ? /*#__PURE__*/_jsxDEV(InputLetter, {\n        isValidLetter: isLetter,\n        guessedLetters: charsGuessed,\n        onGuessSubmitted: onGuessSubmitted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 10\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: newGameButtonClicked,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"msg\",\n      children: msg && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fpbLkqrVkIuQN2bPGNmSvYS4uJw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","InputLetter","DisplayWord","jsxDEV","_jsxDEV","isLetter","char","test","isSpecialChar","App","_s","userName","setUserName","gameOngoing","setGameOngoing","gameAnswer","setGameAnswer","charsGuessed","setCharsGuessed","Set","unrevealedLetters","setUnrevealedLetters","lives","setLives","msg","setMsg","newGame","newAnswer","answer","toUpperCase","Array","filter","onGuessSubmitted","guessedChar","has","newSet","delete","size","p","newCharsGuessed","add","newGameButtonClicked","className","children","isGameFinished","fileName","_jsxFileName","lineNumber","columnNumber","map","letter","isValidLetter","guessedLetters","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/hangman-frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport InputLetter from './InputLetter';\nimport DisplayWord from './DisplayWord';\n\nfunction isLetter(char) {\n  return /^[A-Za-z]$/.test(char);\n}\n\nfunction isSpecialChar(char) {\n  return !isLetter(char);\n}\n\n\nfunction App() {\n\n  const [userName, setUserName] = useState(\"\");\n  const [gameOngoing, setGameOngoing] = useState(false)\n  const [gameAnswer, setGameAnswer] = useState(\"\");\n  const [charsGuessed, setCharsGuessed] = useState(new Set());\n  const [unrevealedLetters, setUnrevealedLetters] = useState(new Set());\n  const [lives, setLives] = useState(0);\n  const [msg, setMsg] = useState(\"\");\n\n  // For login to the game\n  //\n  // useEffect(() => {\n  //   const storedName = localStorage.getItem(\"loggedInUser\");\n  //   if (storedName) {\n  //     setUserName(storedName);\n  //   }\n  // }, []);\n\n  // useEffect(() => {\n  //   if (userName) {\n  //     localStorage.setItem(\"loggedInUser\", userName);\n  //   }\n  // }, [userName]);\n\n    function newGame(newAnswer) {\n      const answer = newAnswer.toUpperCase();\n      setGameAnswer(answer);\n      setUnrevealedLetters(new Set(new Array(...answer).filter(char => isLetter(char))));\n      setCharsGuessed(new Set());\n      setLives(5);\n      setMsg(\"\");\n      setGameOngoing(true);\n    }\n\n  function onGuessSubmitted(guessedChar) {\n    if(unrevealedLetters.has(guessedChar)) {\n      let newSet = new Set(unrevealedLetters);\n      newSet.delete(guessedChar);\n      setUnrevealedLetters(newSet);\n \n      if(newSet.size <= 0) {\n        setMsg(\"You won!\");\n        setGameOngoing(false); \n      }\n    }\n    else {\n      const p = lives - 1;\n      setLives(p);\n      if(p <= 0) {\n        setMsg(\"You lost.\");\n        setGameOngoing(false);\n      }\n    }\n\n    let newCharsGuessed = new Set(charsGuessed);\n    newCharsGuessed.add(guessedChar);\n    setCharsGuessed(newCharsGuessed);\n  }\n\n  function newGameButtonClicked() {\n    const newAnswer = \"popcorn\"; //this is where you set the word for the game\n    newGame(newAnswer);\n  }\n\n  // For Logout\n\n  return (\n    <div className=\"App\">\n      <DisplayWord answer={gameAnswer} unrevealedLetters={unrevealedLetters} isSpecialChar={isSpecialChar} isGameFinished={!gameOngoing}/>\n      <div>\n        <h2>Guessed Letters:</h2>\n        <div className=\"guessed-letters\">\n          {new Array(charsGuessed).map((letter) => {\n            return(<div className=\"guessed-letter\">{letter}</div>);\n          })}\n        </div>\n        <div>\n          Lives: {lives}\n        </div>\n        {gameOngoing ? \n        (<InputLetter isValidLetter={isLetter} guessedLetters={charsGuessed} onGuessSubmitted={onGuessSubmitted}/>)\n        :\n        (<button onClick={newGameButtonClicked}>New Game</button>)}\n      </div>\n      <div className=\"msg\">\n                {msg && ( <div>{msg}</div>)}\n            </div>\n    </div>\n      \n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAACC,IAAI,EAAE;EACtB,OAAO,YAAY,CAACC,IAAI,CAACD,IAAI,CAAC;AAChC;AAEA,SAASE,aAAaA,CAACF,IAAI,EAAE;EAC3B,OAAO,CAACD,QAAQ,CAACC,IAAI,CAAC;AACxB;AAGA,SAASG,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,IAAIoB,GAAG,EAAE,CAAC;EAC3D,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGtB,QAAQ,CAAC,IAAIoB,GAAG,EAAE,CAAC;EACrE,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACyB,GAAG,EAAEC,MAAM,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;;EAElC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEE,SAAS2B,OAAOA,CAACC,SAAS,EAAE;IAC1B,MAAMC,MAAM,GAAGD,SAAS,CAACE,WAAW,EAAE;IACtCb,aAAa,CAACY,MAAM,CAAC;IACrBP,oBAAoB,CAAC,IAAIF,GAAG,CAAC,IAAIW,KAAK,CAAC,GAAGF,MAAM,CAAC,CAACG,MAAM,CAACzB,IAAI,IAAID,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IAClFY,eAAe,CAAC,IAAIC,GAAG,EAAE,CAAC;IAC1BI,QAAQ,CAAC,CAAC,CAAC;IACXE,MAAM,CAAC,EAAE,CAAC;IACVX,cAAc,CAAC,IAAI,CAAC;EACtB;EAEF,SAASkB,gBAAgBA,CAACC,WAAW,EAAE;IACrC,IAAGb,iBAAiB,CAACc,GAAG,CAACD,WAAW,CAAC,EAAE;MACrC,IAAIE,MAAM,GAAG,IAAIhB,GAAG,CAACC,iBAAiB,CAAC;MACvCe,MAAM,CAACC,MAAM,CAACH,WAAW,CAAC;MAC1BZ,oBAAoB,CAACc,MAAM,CAAC;MAE5B,IAAGA,MAAM,CAACE,IAAI,IAAI,CAAC,EAAE;QACnBZ,MAAM,CAAC,UAAU,CAAC;QAClBX,cAAc,CAAC,KAAK,CAAC;MACvB;IACF,CAAC,MACI;MACH,MAAMwB,CAAC,GAAGhB,KAAK,GAAG,CAAC;MACnBC,QAAQ,CAACe,CAAC,CAAC;MACX,IAAGA,CAAC,IAAI,CAAC,EAAE;QACTb,MAAM,CAAC,WAAW,CAAC;QACnBX,cAAc,CAAC,KAAK,CAAC;MACvB;IACF;IAEA,IAAIyB,eAAe,GAAG,IAAIpB,GAAG,CAACF,YAAY,CAAC;IAC3CsB,eAAe,CAACC,GAAG,CAACP,WAAW,CAAC;IAChCf,eAAe,CAACqB,eAAe,CAAC;EAClC;EAEA,SAASE,oBAAoBA,CAAA,EAAG;IAC9B,MAAMd,SAAS,GAAG,SAAS,CAAC,CAAC;IAC7BD,OAAO,CAACC,SAAS,CAAC;EACpB;;EAEA;;EAEA,oBACEvB,OAAA;IAAKsC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvC,OAAA,CAACF,WAAW;MAAC0B,MAAM,EAAEb,UAAW;MAACK,iBAAiB,EAAEA,iBAAkB;MAACZ,aAAa,EAAEA,aAAc;MAACoC,cAAc,EAAE,CAAC/B;IAAY;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eACpI5C,OAAA;MAAAuC,QAAA,gBACEvC,OAAA;QAAAuC,QAAA,EAAI;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACzB5C,OAAA;QAAKsC,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC7B,IAAIb,KAAK,CAACb,YAAY,CAAC,CAACgC,GAAG,CAAEC,MAAM,IAAK;UACvC,oBAAO9C,OAAA;YAAKsC,SAAS,EAAC,gBAAgB;YAAAC,QAAA,EAAEO;UAAM;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAO;QACvD,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,eACN5C,OAAA;QAAAuC,QAAA,GAAK,SACI,EAACrB,KAAK;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACT,EACLnC,WAAW,gBACXT,OAAA,CAACH,WAAW;QAACkD,aAAa,EAAE9C,QAAS;QAAC+C,cAAc,EAAEnC,YAAa;QAACe,gBAAgB,EAAEA;MAAiB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,gBAEzG5C,OAAA;QAAQiD,OAAO,EAAEZ,oBAAqB;QAAAE,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAU;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtD,eACN5C,OAAA;MAAKsC,SAAS,EAAC,KAAK;MAAAC,QAAA,EACTnB,GAAG,iBAAMpB,OAAA;QAAAuC,QAAA,EAAMnB;MAAG;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAQ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACR;AAGV;AAACtC,EAAA,CA3FQD,GAAG;AAAA6C,EAAA,GAAH7C,GAAG;AA6FZ,eAAeA,GAAG;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}